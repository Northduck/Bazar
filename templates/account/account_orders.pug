mixin productsOrdersHistory()
    ul.Account-orders-type-products
        -let currentOrderId=-1;
        -for(let i=0;i<userProductsOrders.length;i++){
        -if(userProductsOrders[i]["product_order_id"]!==currentOrderId){
            -currentOrderId=userProductsOrders[i]["product_order_id"];
            li.Orders-history-order-el
                h3(class='Orders-history-order-header')=i18n.__("Order")+" # "+userProductsOrders[i]["product_order_generated_number"]
                -let accountOrdersProductsInfo=i18n.__("account orders info")
                ul(class='Orders-history-order-info-list')
                    li
                        p=accountOrdersProductsInfo["Payment type"]
                        p=i18n.__(userProductsOrders[i]["product_order_payment_type"])
                    li
                        p=accountOrdersProductsInfo["Receiving type"]
                        p=i18n.__(userProductsOrders[i]["product_order_receive_type"])
                    li
                        p=accountOrdersProductsInfo["Order date"]
                        p=userProductsOrders[i]["product_order_date"].toLocaleString(i18n.locale,{"year":"numeric","month":"2-digit","day":"2-digit"})
                    li
                        p=accountOrdersProductsInfo["Order summ"]
                        -let orderSummConverted=money.convertTo(money({amount:Number.parseInt(userProductsOrders[i]["product_order_summ"]*100)}),session["currency"],currencyRates);
                        p=orderSummConverted.toFormat("$0,0.00")
                button(class='Order-products-open-btn')=i18n.__("Show ordered products")
                -let orderProducts=i18n.__("account orders products")
                ul(class='Orders-history-order-products-list visually-hidden')
                    li(class='Order-product-header')
                        h4(class="Order-product-nav-name")=orderProducts["Product Name"]
                        h4(class="Order-product-nav-price")=orderProducts["Product price"]
                        h4(class="Order-product-nav-quntity")=orderProducts["Product quantity"]
                    -for(let j=i;j<userProductsOrders.length;j++){
                    -if(userProductsOrders[j]["product_order_id"]!==currentOrderId){
                    -i=j-1;
                    -break;
                    -}else{
                    li(class="Order-product-card")
                        ul(class='Order-product-list')
                            li(class='Order-product-name')=userProductsOrders[j]["product_name_"+i18n.locale]
                            -let currentPriceConverted=money.convertTo(money({amount:Number.parseInt(userProductsOrders[j]["purchase_for_price"]*100)}),session["currency"],currencyRates);
                            li(class="Order-product-price")=currentPriceConverted.toFormat("$0,0.00")
                            li(class="Order-product-quantity")=userProductsOrders[j]["purchase_quantity"]
                    -}
                    -}
        -}
        -}

mixin servicesOrdersHistory()
    ul.Account-orders-type-products
        -let currentOrderId=-1;
        -for(let i=0;i<userServicesOrders.length;i++){
        -console.log("i= ",i,"  userServicesOrders.length= ",userServicesOrders.length)
        -if(userServicesOrders[i]["service_order_id"]!==currentOrderId){
            -currentOrderId=userServicesOrders[i]["service_order_id"];
            li.Orders-history-order-el
                h3(class='Orders-history-order-header')="Order #"+userServicesOrders[i]["service_order_generated_number"]
                -let accountOrdersServicesInfo=i18n.__("account orders info")
                ul(class='Orders-history-order-info-list')
                    li
                        p=accountOrdersServicesInfo["Payment type"]
                        p=i18n.__(userServicesOrders[i]["service_order_payment_type"])
                    li
                        p=accountOrdersServicesInfo["Order date"]
                        p=userServicesOrders[i]["service_order_date"].toLocaleString(i18n.locale,{"year":"numeric","month":"2-digit","day":"2-digit"})
                    li
                        p=accountOrdersServicesInfo["Order summ"]
                        -let orderSummConverted=money.convertTo(money({amount:Number.parseInt(userServicesOrders[i]["service_order_summ"]*100)}),session["currency"],currencyRates);
                        p=orderSummConverted.toFormat("$0,0.00")
                button(class='Order-products-open-btn')=i18n.__("Show ordered products")
                -let orderServices=i18n.__("account orders services")
                ul(class='Orders-history-order-products-list visually-hidden')
                    li(class='Order-product-header')
                        h4(class="Order-product-nav-name")=orderServices["Service Name"]
                        h4(class="Order-product-nav-price")=orderServices["Service price"]
                        h4(class="Order-product-nav-quntity")=orderServices["Service quantity"]
                    -for(let j=i;j<userServicesOrders.length;j++){
                    -console.log("j= ",userServicesOrders[j]["service_order_id"],"current",currentOrderId);
                    -if(userServicesOrders[j]["service_order_id"]!==currentOrderId){
                    -i=j-1;
                    -break;
                    -}else{
                    li(class="Order-product-card")
                        ul(class='Order-product-list')
                            li(class='Order-product-name')=userServicesOrders[j]["service_name_"+i18n.locale]
                            -let currentPriceConverted=money.convertTo(money({amount:Number.parseInt(userServicesOrders[j]["service_current_price"]*100)}),session["currency"],currencyRates);
                            li(class="Order-product-price")=currentPriceConverted.toFormat("$0,0.00")
                    -}
                    -}
        -}
        -}
div.Account-products-orders
    -if(userProductsOrders!==undefined&&userProductsOrders.length>0){
    +productsOrdersHistory()
    -}else{
        p.Account-emptiness-explanation=i18n.__("no orders")
    -}
div.Account-services-orders.visually-hidden
    -if(userServicesOrders!==undefined&&userServicesOrders.length>0){
    +servicesOrdersHistory()
    -}else{
        p.Account-emptiness-explanation=i18n.__("no orders")
    -}